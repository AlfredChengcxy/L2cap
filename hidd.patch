--- bluez-utils-3.29/hidd/main.c.orig	2008-03-26 15:26:15.000000000 +0100
+++ bluez-utils-3.29/hidd/main.c	2008-03-26 21:57:50.000000000 +0100
@@ -443,7 +443,7 @@
 	}
 }
 
-static void do_connect(int ctl, bdaddr_t *src, bdaddr_t *dst, uint8_t subclass, int fakehid, int bootonly, int encrypt, int timeout)
+static void do_connect(int ctl, bdaddr_t *src, bdaddr_t *dst, uint8_t subclass, int fakehid, int bootonly, int encrypt, int timeout, unsigned short psm_ctrl, unsigned short psm_intr)
 {
 	struct hidp_connadd_req req;
 	uint16_t uuid = HID_SVCLASS_ID;
@@ -504,14 +504,14 @@
 	return;
 
 connect:
-	csk = l2cap_connect(src, dst, L2CAP_PSM_HIDP_CTRL);
+	csk = l2cap_connect(src, dst, psm_ctrl);
 	if (csk < 0) {
 		perror("Can't create HID control channel");
 		close(ctl);
 		exit(1);
 	}
 
-	isk = l2cap_connect(src, dst, L2CAP_PSM_HIDP_INTR);
+	isk = l2cap_connect(src, dst, psm_intr);
 	if (isk < 0) {
 		perror("Can't create HID interrupt channel");
 		close(csk);
@@ -531,7 +531,7 @@
 	}
 }
 
-static void do_search(int ctl, bdaddr_t *bdaddr, uint8_t subclass, int fakehid, int bootonly, int encrypt, int timeout)
+static void do_search(int ctl, bdaddr_t *bdaddr, uint8_t subclass, int fakehid, int bootonly, int encrypt, int timeout, unsigned short psm_ctrl, unsigned short psm_intr)
 {
 	inquiry_info *info = NULL;
 	bdaddr_t src, dst;
@@ -562,7 +562,7 @@
 			ba2str(&dst, addr);
 
 			printf("\tConnecting to device %s\n", addr);
-			do_connect(ctl, &src, &dst, subclass, fakehid, bootonly, encrypt, timeout);
+			do_connect(ctl, &src, &dst, subclass, fakehid, bootonly, encrypt, timeout, psm_ctrl, psm_intr);
 		}
 	}
 
@@ -578,7 +578,7 @@
 			ba2str(&dst, addr);
 
 			printf("\tConnecting to device %s\n", addr);
-			do_connect(ctl, &src, &dst, subclass, 1, bootonly, 0, timeout);
+			do_connect(ctl, &src, &dst, subclass, 1, bootonly, 0, timeout, psm_ctrl, psm_intr);
 		}
 	}
 
@@ -684,9 +684,16 @@
 	{ "kill",	1, 0, 'k' },
 	{ "killall",	0, 0, 'K' },
 	{ "unplug",	1, 0, 'u' },
+	{ "psmctrl",	1, 0, 0x11 },
+	{ "psmintr",	1, 0, 0x13 },
 	{ 0, 0, 0, 0 }
 };
 
+static inline long int get_number(const char *optarg)
+{
+	return strtol(optarg, NULL, strncasecmp(optarg, "0x", 2) ? 10 : 16);
+}
+
 int main(int argc, char *argv[])
 {
 	struct sigaction sa;
@@ -694,6 +701,8 @@
 	uint32_t flags = 0;
 	uint8_t subclass = 0x00;
 	char addr[18];
+	unsigned short psm_ctrl = L2CAP_PSM_HIDP_CTRL;
+	unsigned short psm_intr = L2CAP_PSM_HIDP_INTR;
 	int log_option = LOG_NDELAY | LOG_PID;
 	int opt, ctl, csk, isk;
 	int mode = SHOW, detach = 1, nosdp = 0, nocheck = 0, bootonly = 0;
@@ -716,10 +725,7 @@
 			timeout = atoi(optarg);
 			break;
 		case 'b':
-			if (!strncasecmp(optarg, "0x", 2))
-				subclass = (uint8_t) strtol(optarg, NULL, 16);
-			else
-				subclass = atoi(optarg);
+			subclass = get_number(optarg);
 			break;
 		case 'M':
 			lm |= L2CAP_LM_MASTER;
@@ -768,6 +774,12 @@
 		case 'h':
 			usage();
 			exit(0);
+		case 0x11:
+			psm_ctrl = get_number(optarg);
+			break;
+		case 0x13:
+			psm_intr = get_number(optarg);
+			break;
 		default:
 			exit(0);
 		}
@@ -783,14 +795,14 @@
 
 	switch (mode) {
 	case SERVER:
-		csk = l2cap_listen(&bdaddr, L2CAP_PSM_HIDP_CTRL, lm, 10);
+		csk = l2cap_listen(&bdaddr, psm_ctrl, lm, 10);
 		if (csk < 0) {
 			perror("Can't listen on HID control channel");
 			close(ctl);
 			exit(1);
 		}
 
-		isk = l2cap_listen(&bdaddr, L2CAP_PSM_HIDP_INTR, lm, 10);
+		isk = l2cap_listen(&bdaddr, psm_intr, lm, 10);
 		if (isk < 0) {
 			perror("Can't listen on HID interrupt channel");
 			close(ctl);
@@ -800,12 +812,12 @@
 		break;
 
 	case SEARCH:
-		do_search(ctl, &bdaddr, subclass, fakehid, bootonly, encrypt, timeout);
+		do_search(ctl, &bdaddr, subclass, fakehid, bootonly, encrypt, timeout, psm_ctrl, psm_intr);
 		close(ctl);
 		exit(0);
 
 	case CONNECT:
-		do_connect(ctl, &bdaddr, &dev, subclass, fakehid, bootonly, encrypt, timeout);
+		do_connect(ctl, &bdaddr, &dev, subclass, fakehid, bootonly, encrypt, timeout, psm_ctrl, psm_intr);
 		close(ctl);
 		exit(0);
 
